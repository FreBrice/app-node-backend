import app from './src/app.js';
import connectDB from './src/config/database.js';

// Configuraci√≥n del puerto
const PORT = process.env.PORT || 4000;

// Funci√≥n para iniciar el servidor
const startServer = async () => {
    try {
        // Conectar a la base de datos
        await connectDB();
        
        // Iniciar servidor
        app.listen(PORT, () => {
            console.log('üöÄ ========================================');
            console.log(`üöÄ Servidor corriendo en puerto ${PORT}`);
            console.log(`üöÄ Entorno: ${process.env.NODE_ENV || 'development'}`);
            console.log(`üöÄ URL local: http://localhost:${PORT}`);
            console.log('üöÄ ========================================');
            console.log('üìã Rutas disponibles:');
            console.log('üìã   GET  /                    - Lista de pr√©stamos');
            console.log('üìã   GET  /prestamo           - Nuevo pr√©stamo');
            console.log('üìã   POST /guardar-prestamo   - Guardar pr√©stamo');
            console.log('üìã   GET  /registrar-pago/:id - Registrar pago');
            console.log('üìã   GET  /pago               - Formulario pago');
            console.log('üìã   GET  /health             - Estado del servidor');
            console.log('üìã   GET  /info               - Informaci√≥n de la API');
            console.log('üöÄ ========================================');
        });
        
    } catch (error) {
        console.error('‚ùå Error al iniciar el servidor:', error);
        process.exit(1);
    }
};

// Manejo graceful de cierre del servidor
process.on('SIGTERM', () => {
    console.log('üõë Recibida se√±al SIGTERM, cerrando servidor...');
    process.exit(0);
});

process.on('SIGINT', () => {
    console.log('üõë Recibida se√±al SIGINT, cerrando servidor...');
    process.exit(0);
});

// Manejo de errores no capturados
process.on('unhandledRejection', (err) => {
    console.error('‚ùå Unhandled Rejection:', err);
    process.exit(1);
});

process.on('uncaughtException', (err) => {
    console.error('‚ùå Uncaught Exception:', err);
    process.exit(1);
});

// Iniciar el servidor
startServer();